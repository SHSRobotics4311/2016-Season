// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4311.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4311.Robot;

/**
 *
 */
public class  CameraMove extends Command {

    public CameraMove() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
    	requires(Robot.cameraMount);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(Robot.oi.joystick1.getPOV() == 0){
    		Robot.cameraMount.tiltUp();
    	}else if(Robot.oi.joystick1.getPOV() == 45){
    		Robot.cameraMount.tiltUp();
    		Robot.cameraMount.panRight();
    	}else if(Robot.oi.joystick1.getPOV() == 90){
    		Robot.cameraMount.panRight();
    	}else if(Robot.oi.joystick1.getPOV() == 135){
    		Robot.cameraMount.tiltDown();
    		Robot.cameraMount.panRight();
    	}else if(Robot.oi.joystick1.getPOV() == 180){
    		Robot.cameraMount.tiltDown();
    	}else if(Robot.oi.joystick1.getPOV() == 225){
    		Robot.cameraMount.tiltDown();
    		Robot.cameraMount.panLeft();
    	}else if(Robot.oi.joystick1.getPOV() == 270){
    		Robot.cameraMount.panLeft();
    	}else if(Robot.oi.joystick1.getPOV() == 315){
    		Robot.cameraMount.tiltUp();
    		Robot.cameraMount.panLeft();
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
